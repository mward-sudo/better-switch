const a=(a,b)=>a in b&&"function"!=typeof b[a],b=(a,b)=>"default"in b&&"function"!=typeof b.default,c=(a,b)=>!(a in b)&&!("default"in b),d=(d,e,f)=>{if(d instanceof TypeError){if(a(e,f))return`BetterSwitch: The '${e}' key in your caseObject parameter does not return a function`;if(b(e,f))return`BetterSwitch: The '${e}' key in your caseObject parameter does not exist, and the 'default' key does not return a function`;if(c(e,f))return`'BetterSwitch: ${e}' is not a key in your caseObject parameter, and no 'default' key is provided`}return`BetterSwitch: Unhandled error (${typeof d})`};export default((a,b)=>{try{return a in b?b[a]():b.default()}catch(c){throw new Error(d(c,a,b))}})
//# sourceMappingURL=index.js.map